fun main () {
    val eCar = ElectricCar()
    println("▼ ACTIONS")
    eCar.start(eCar.nameV)
    eCar.turnOnRadio()
    eCar.speedUp(eCar.nameV)
    eCar.slowsDown(eCar.nameV)
    eCar.stop(eCar.nameV)
    println("▼ INFOS")
    eCar.getNbWheels(eCar.nameV, eCar.nbWheels)
    eCar.getNoisePoll(eCar.nameV, eCar.noisePoll)
    eCar.recharging(eCar.nameV)
    println()

    val fCar = FuelCar()
    println("▼ ACTIONS")
    fCar.start(fCar.nameV)
    fCar.turnOnRadio()
    fCar.speedUp(fCar.nameV)
    fCar.slowsDown(fCar.nameV)
    fCar.stop(fCar.nameV)
    println("▼ INFOS")
    fCar.getNbWheels(fCar.nameV, fCar.nbWheels)
    fCar.getNoisePoll(fCar.nameV, fCar.noisePoll)
    fCar.refueling(fCar.nameV)
    println()

    val hCar = HybridCar()
    println("▼ ACTIONS")
    hCar.start(hCar.nameV)
    hCar.turnOnRadio()
    hCar.speedUp(hCar.nameV)
    hCar.slowsDown(hCar.nameV)
    hCar.stop(hCar.nameV)
    println("▼ INFOS")
    hCar.getNbWheels(hCar.nameV, hCar.nbWheels)
    hCar.getNoisePoll(hCar.nameV, hCar.noisePoll)
    hCar.refueling(hCar.nameV)
    hCar.recharging(hCar.nameV)
    println()

    val eMoto = ElecMotoC()
    println("▼ ACTIONS")
    eMoto.start(eMoto.nameV)
    eMoto.speedUp(eMoto.nameV)
    eMoto.rearsUp(eMoto.nameV)
    eMoto.slowsDown(eMoto.nameV)
    eMoto.stop(eMoto.nameV)
    println("▼ INFOS")
    eMoto.getNbWheels(eMoto.nameV, eMoto.nbWheels)
    eMoto.getNoisePoll(eMoto.nameV, eMoto.noisePoll)
    eMoto.recharging(eMoto.nameV)
    println()

    val fMoto = FuelMotoC()
    println("▼ ACTIONS")
    fMoto.start(fMoto.nameV)
    fMoto.speedUp(fMoto.nameV)
    fMoto.rearsUp(fMoto.nameV)
    fMoto.slowsDown(fMoto.nameV)
    fMoto.stop(fMoto.nameV)
    println("▼ INFOS")
    fMoto.getNbWheels(fMoto.nameV, fMoto.nbWheels)
    fMoto.getNoisePoll(fMoto.nameV, fMoto.noisePoll)
    fMoto.refueling(fMoto.nameV)
    println()

    val bCy = Bicycle()
    println("▼ ACTIONS")
    bCy.start(bCy.nameV)
    bCy.speedUp(bCy.nameV)
    bCy.rearsUp(bCy.nameV)
    bCy.ringBell()
    bCy.slowsDown(bCy.nameV)
    bCy.stop(bCy.nameV)
    println("▼ INFOS")
    bCy.getNbWheels(bCy.nameV, bCy.nbWheels)
    bCy.getNoisePoll(bCy.nameV, bCy.noisePoll)
}